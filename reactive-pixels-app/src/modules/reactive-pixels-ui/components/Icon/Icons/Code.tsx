import { css } from "emotion";
import * as React from "react";
import { IBaseTheme, withStyles } from "../../../theme";

type Colour = "light" | "dark" | "primary";

export interface IClasses {
  root: string;
}

export interface IProps {
  classes: IClasses;
  theme: IBaseTheme;
  colour?: Colour;
}

const styles = (theme: IBaseTheme): IClasses => {
  return {
    root: css({})
  };
};

class Code extends React.PureComponent<IProps> {
  public render() {
    const { colour = "dark", theme } = this.props;
    const { textColourDark, textColourLight } = theme.colours;
    const { primary } = theme.colours.palette;

    const fillColour =
      colour === "dark"
        ? textColourDark
        : colour === "primary"
          ? primary.hex
          : textColourLight;

    return (
      <g strokeWidth="1" fill="none">
        <path
          d="M5.65092402,1.36344969 C5.02669092,1.36344969 4.55030965,1.45379786 4.22176591,1.63449692 C3.89322218,1.81519598 3.75085536,2.12457002 3.79466119,2.56262834 L4.09034908,5.58521561 C4.10130053,5.68377873 4.10677618,5.8206699 4.10677618,5.99589322 C4.10677618,6.59822341 3.9452446,7.05543992 3.62217659,7.36755647 C3.29910858,7.67967302 2.81998949,7.89048542 2.18480493,8 C2.8418924,8.10951458 3.32648715,8.31211351 3.6386037,8.60780287 C3.95072025,8.90349224 4.10677618,9.35797092 4.10677618,9.97125257 C4.10677618,10.1683788 4.10130053,10.3162213 4.09034908,10.4147844 L3.79466119,13.4373717 C3.75085536,13.8863814 3.89322218,14.1984933 4.22176591,14.3737166 C4.55030965,14.54894 5.02669092,14.6365503 5.65092402,14.6365503 L5.65092402,16 C4.50102094,16 3.61670398,15.8220415 2.99794661,15.4661191 C2.37918924,15.1101967 2.0698152,14.5051377 2.0698152,13.650924 C2.0698152,13.4866522 2.07529084,13.3607123 2.0862423,13.2731006 L2.39835729,10.4312115 C2.40930875,10.3764542 2.41478439,10.2888439 2.41478439,10.1683778 C2.41478439,9.66461076 2.2286124,9.30048025 1.85626283,9.07597536 C1.48391326,8.85147047 0.865165175,8.73921971 0,8.73921971 L0,7.26078029 C0.865165175,7.26078029 1.48391326,7.14852953 1.85626283,6.92402464 C2.2286124,6.69951975 2.41478439,6.33538924 2.41478439,5.83162218 C2.41478439,5.7221076 2.40930875,5.6399729 2.39835729,5.58521561 L2.0862423,2.74332649 C2.07529084,2.65571483 2.0698152,2.52977495 2.0698152,2.36550308 C2.0698152,1.51128936 2.37918924,0.903492567 2.99794661,0.542094456 C3.61670398,0.180696345 4.50102094,0 5.65092402,0 L5.65092402,1.36344969 Z M10.349076,0 C11.4989791,0 12.383296,0.177958522 13.0020534,0.533880903 C13.6208108,0.889803285 13.9301848,1.49486226 13.9301848,2.34907598 C13.9301848,2.51334784 13.9247092,2.63928772 13.9137577,2.72689938 L13.6016427,5.58521561 L13.5852156,5.81519507 C13.5852156,6.31896214 13.7796011,6.68583047 14.1683778,6.91581109 C14.5571546,7.1457917 15.1676892,7.26078029 16,7.26078029 L16,8.73921971 C15.1676892,8.73921971 14.5571546,8.85694612 14.1683778,9.09240246 C13.7796011,9.32785881 13.5852156,9.69746497 13.5852156,10.201232 L13.6016427,10.4312115 L13.9137577,13.2566735 C13.9247092,13.3442852 13.9301848,13.4702251 13.9301848,13.6344969 C13.9301848,14.4887106 13.6208108,15.0965074 13.0020534,15.4579055 C12.383296,15.8193037 11.4989791,16 10.349076,16 L10.349076,14.6365503 C10.9733091,14.6365503 11.4496903,14.54894 11.7782341,14.3737166 C12.1067778,14.1984933 12.2491446,13.8863814 12.2053388,13.4373717 L11.9096509,10.4147844 C11.8986995,10.3162213 11.8932238,10.1738545 11.8932238,9.98767967 C11.8932238,9.37439803 12.0574932,8.91718152 12.386037,8.61601643 C12.7145807,8.31485133 13.2292915,8.11499023 13.9301848,8.0164271 C13.240243,7.89596107 12.72827,7.68241084 12.3942505,7.37577002 C12.060231,7.0691292 11.8932238,6.60917487 11.8932238,5.99589322 C11.8932238,5.8206699 11.8986995,5.68377873 11.9096509,5.58521561 L12.2053388,2.56262834 C12.2491446,2.12457002 12.10404,1.81519598 11.7700205,1.63449692 C11.4360011,1.45379786 10.9623576,1.36344969 10.349076,1.36344969 L10.349076,0 Z"
          fill={fillColour}
        />
      </g>
    );
  }
}

export default withStyles(styles, { withTheme: true })(Code);
